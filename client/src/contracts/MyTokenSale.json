{
  "contractName": "MyTokenSale",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "contract KYCContract",
          "name": "_kyc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract KYCContract\",\"name\":\"_kyc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/MyTokenSale.sol\":\"MyTokenSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/CrowdSale.sol\":{\"keccak256\":\"0x901f039a8fd5f04f99773510fe55dc796f4aa1a83fa78413ed3d85632b9ae3dd\",\"urls\":[\"bzz-raw://814c3a16f9e1151d89cdb0c2d8c51df2a01716af44a260fc2d66c3790b9aba6e\",\"dweb:/ipfs/QmWcUbXSw4G8WZzExNvcpxcbTja6MZ8Yk5XAv58csSDjzt\"]},\"/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/KYCContract.sol\":{\"keccak256\":\"0xee06bd1da322ea23caf6a8a8c8eaec8be6067b475fe50374d45ade138f820935\",\"urls\":[\"bzz-raw://01bd5048b505504ee0835ba4fbd4795001c7c4f55fbb20be5f22baaf160f3737\",\"dweb:/ipfs/QmV6RUvBKX52MNMVhxnBweJUozwzdA3uN85BCMTUVA5zdg\"]},\"/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/MyTokenSale.sol\":{\"keccak256\":\"0x04e886a100e0d8b05ab18ef436de115cbd0a537a5390582fefebfff15c672017\",\"urls\":[\"bzz-raw://73810585a1ef0dabd31d212e43ee31d5d8bfdec199d94d51f596575f4a8680fc\",\"dweb:/ipfs/QmZBk5tGooxDTjTt6ycpEjB4j6uB2i62JsoLAgBJ8AXh3C\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610fd6380380610fd68339818101604052608081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291905050508383836001600081905550600083116100e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610169576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610fb16025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610f8d6024913960400191505060405180910390fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050610cbe806102cf6000396000f3fe60806040526004361061004e5760003560e01c80632c4e722e1461006a5780634042b66f14610095578063521eb273146100c0578063ec8ac4d814610101578063fc0c546a1461014557610065565b366100655761006361005e610186565b61018e565b005b600080fd5b34801561007657600080fd5b5061007f6102ed565b6040518082815260200191505060405180910390f35b3480156100a157600080fd5b506100aa6102f7565b6040518082815260200191505060405180910390f35b3480156100cc57600080fd5b506100d5610301565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101436004803603602081101561011757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018e565b005b34801561015157600080fd5b5061015a61032b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60026000541415610207576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b6002600081905550600034905061021e8282610355565b60006102298261047c565b90506102408260045461049a90919063ffffffff16565b6004819055506102508382610522565b8273ffffffffffffffffffffffffffffffffffffffff1661026f610186565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36102ce8383610530565b6102d6610534565b6102e0838361059f565b5050600160008190555050565b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61035f82826105a3565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663df235fe4336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d602081101561041257600080fd5b8101908080519060200190929190505050610478576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526042815260200180610bac6042913960600191505060405180910390fd5b5050565b6000610493600354836106a490919063ffffffff16565b9050919050565b600080828401905083811015610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61052c828261072a565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561059c573d6000803e3d6000fd5b50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610c35602a913960400191505060405180910390fd5b60008114156106a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000808314156106b75760009050610724565b60008284029050828482816106c857fe5b041461071f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610c146021913960400191505060405180910390fd5b809150505b92915050565b6107778282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661077b9092919063ffffffff16565b5050565b6108188363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061081d565b505050565b600061087f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661090c9092919063ffffffff16565b9050600081511115610907578080602001905160208110156108a057600080fd5b8101908080519060200190929190505050610906576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610c5f602a913960400191505060405180910390fd5b5b505050565b606061091b8484600085610924565b90509392505050565b60608247101561097f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610bee6026913960400191505060405180910390fd5b61098885610acc565b6109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310610a495780518252602082019150602081019050602083039250610a26565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610aab576040519150601f19603f3d011682016040523d82523d6000602084013e610ab0565b606091505b5091509150610ac0828286610adf565b92505050949350505050565b600080823b905060008111915050919050565b60608315610aef57829050610ba4565b600083511115610b025782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b69578082015181840152602081019050610b4e565b50505050905090810190601f168015610b965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe54686973207573657220686173206e6f7420636f6d706c6574656420746865207265717569726564206b6e6f7720796f757220637573746f6d657220636865636b73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220692cb8000c6dbcba2a52663e700225ab3f2cc4059e564556d6f495a0e9722fbb64736f6c6343000706003343726f776473616c653a20746f6b656e20697320746865207a65726f206164647265737343726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80632c4e722e1461006a5780634042b66f14610095578063521eb273146100c0578063ec8ac4d814610101578063fc0c546a1461014557610065565b366100655761006361005e610186565b61018e565b005b600080fd5b34801561007657600080fd5b5061007f6102ed565b6040518082815260200191505060405180910390f35b3480156100a157600080fd5b506100aa6102f7565b6040518082815260200191505060405180910390f35b3480156100cc57600080fd5b506100d5610301565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101436004803603602081101561011757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018e565b005b34801561015157600080fd5b5061015a61032b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60026000541415610207576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b6002600081905550600034905061021e8282610355565b60006102298261047c565b90506102408260045461049a90919063ffffffff16565b6004819055506102508382610522565b8273ffffffffffffffffffffffffffffffffffffffff1661026f610186565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36102ce8383610530565b6102d6610534565b6102e0838361059f565b5050600160008190555050565b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61035f82826105a3565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663df235fe4336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d602081101561041257600080fd5b8101908080519060200190929190505050610478576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526042815260200180610bac6042913960600191505060405180910390fd5b5050565b6000610493600354836106a490919063ffffffff16565b9050919050565b600080828401905083811015610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61052c828261072a565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561059c573d6000803e3d6000fd5b50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610c35602a913960400191505060405180910390fd5b60008114156106a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000808314156106b75760009050610724565b60008284029050828482816106c857fe5b041461071f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610c146021913960400191505060405180910390fd5b809150505b92915050565b6107778282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661077b9092919063ffffffff16565b5050565b6108188363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061081d565b505050565b600061087f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661090c9092919063ffffffff16565b9050600081511115610907578080602001905160208110156108a057600080fd5b8101908080519060200190929190505050610906576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610c5f602a913960400191505060405180910390fd5b5b505050565b606061091b8484600085610924565b90509392505050565b60608247101561097f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610bee6026913960400191505060405180910390fd5b61098885610acc565b6109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310610a495780518252602082019150602081019050602083039250610a26565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610aab576040519150601f19603f3d011682016040523d82523d6000602084013e610ab0565b606091505b5091509150610ac0828286610adf565b92505050949350505050565b600080823b905060008111915050919050565b60608315610aef57829050610ba4565b600083511115610b025782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b69578082015181840152602081019050610b4e565b50505050905090810190601f168015610b965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe54686973207573657220686173206e6f7420636f6d706c6574656420746865207265717569726564206b6e6f7720796f757220637573746f6d657220636865636b73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220692cb8000c6dbcba2a52663e700225ab3f2cc4059e564556d6f495a0e9722fbb64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "85:1427:4:-:0;;;246:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;338:4;344:6;352:5;1645:1:12;1760:7;:22;;;;2578:1:0;2571:4;:8;2563:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:1;2623:20;;:6;:20;;;;2615:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:1;2704:28;;2712:5;2704:28;;;;2696:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2794:4;2786:5;:12;;;;2819:6;2809:7;;:16;;;;;;;;;;;;;;;;;;2845:5;2836:6;;:14;;;;;;;;;;;;;;;;;;2480:378;;;477:4:4::1;463:11;;:18;;;;;;;;;;;;;;;;;;246:243:::0;;;;85:1427;;;;;;",
  "deployedSourceMap": "85:1427:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:23:0;3203:12;:10;:12::i;:::-;3193:9;:23::i;:::-;85:1427:4;;;;;3626:77:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3771:87;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3447:89;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4123:622;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3288:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;598:104:5;651:15;685:10;678:17;;598:104;:::o;4123:622:0:-;1688:1:12;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;4202:17:0::1;4222:9;4202:29;;4242:44;4263:11;4276:9;4242:20;:44::i;:::-;4348:14;4365:26;4381:9;4365:15;:26::i;:::-;4348:43;;4442:25;4457:9;4442:10;;:14;;:25;;;;:::i;:::-;4429:10;:38;;;;4480:37;4497:11;4510:6;4480:16;:37::i;:::-;4563:11;4533:61;;4549:12;:10;:12::i;:::-;4533:61;;;4576:9;4587:6;4533:61;;;;;;;;;;;;;;;;;;;;;;;;4607:46;4630:11;4643:9;4607:22;:46::i;:::-;4666:15;:13;:15::i;:::-;4692:45;4714:11;4727:9;4692:21;:45::i;:::-;2436:1:12;;1645::::0;2580:7;:22;;;;4123:622:0;:::o;3626:77::-;3663:7;3690:5;;3683:12;;3626:77;:::o;3771:87::-;3813:7;3840:10;;3833:17;;3771:87;:::o;3447:89::-;3486:15;3521:7;;;;;;;;;;;3514:14;;3447:89;:::o;3288:78::-;3326:6;3352;;;;;;;;;;;3345:13;;3288:78;:::o;1094:415:4:-;1197:50;1224:11;1237:9;1197:26;:50::i;:::-;1266:11;;;;;;;;;;;:24;;;1291:10;1266:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:415;;:::o;7685:122:0:-;7752:7;7779:20;7793:5;;7779:9;:13;;:20;;;;:::i;:::-;7772:27;;7685:122;;;:::o;882:176:7:-;940:7;959:9;975:1;971;:5;959:17;;999:1;994;:6;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;1043:8;;;882:176;;;;:::o;6854:143:0:-;6949:40;6964:11;6977;6949:14;:40::i;:::-;6854:143;;:::o;7275:154::-;;;:::o;7899:87::-;7951:7;;;;;;;;;;;:16;;:27;7968:9;7951:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7899:87::o;5988:158::-;;;:::o;5298:387::-;5431:1;5408:25;;:11;:25;;;;5400:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5512:1;5499:9;:14;;5491:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5298:387;;:::o;2188:459:7:-;2246:7;2492:1;2487;:6;2483:45;;;2516:1;2509:8;;;;2483:45;2538:9;2554:1;2550;:5;2538:17;;2582:1;2577;2573;:5;;;;;;:10;2565:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2639:1;2632:8;;;2188:459;;;;;:::o;6434:146:0:-;6527:45;6547:11;6560;6527:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6434:146;;:::o;704:175:10:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;3581:193:11:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;6111:725::-;6226:12;6254:7;6250:580;;;6284:10;6277:17;;;;6250:580;6415:1;6395:10;:17;:21;6391:429;;;6653:10;6647:17;6713:15;6700:10;6696:2;6692:19;6685:44;6602:145;6792:12;6785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6111:725;;;;;;:::o",
  "source": "pragma solidity ^0.7.4;\r\n\r\nimport \"./CrowdSale.sol\";\r\nimport \"./KYCContract.sol\";\r\n\r\ncontract MyTokenSale is Crowdsale {\r\n\r\n    // used to make sure the addresses that try to purchase tokens are whitelisted!!\r\n    KYCContract kycContract;\r\n\r\n    constructor(uint256 rate, address payable wallet, IERC20 token, KYCContract _kyc) Crowdsale(rate, wallet, token) {\r\n        \r\n        // set the kyc contract to be the one sent from the constructor arguments\r\n        kycContract = _kyc;\r\n    }\r\n\r\n    // override the validate prepurchase contract!\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal view override{\r\n        super._preValidatePurchase(beneficiary, weiAmount);\r\n        require(kycContract.kycCompleted(msg.sender), \"This user has not completed the required know your customer checks\");\r\n        // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n}",
  "sourcePath": "C:/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/MyTokenSale.sol",
  "ast": {
    "absolutePath": "/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/MyTokenSale.sol",
    "exportedSymbols": {
      "Address": [
        1827
      ],
      "Context": [
        484
      ],
      "Crowdsale": [
        296
      ],
      "IERC20": [
        1370
      ],
      "KYCContract": [
        345
      ],
      "MyTokenSale": [
        461
      ],
      "Ownable": [
        593
      ],
      "ReentrancyGuard": [
        1867
      ],
      "SafeERC20": [
        1583
      ],
      "SafeMath": [
        789
      ]
    },
    "id": 462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 407,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/CrowdSale.sol",
        "file": "./CrowdSale.sol",
        "id": 408,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 297,
        "src": "27:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/KYCContract.sol",
        "file": "./KYCContract.sol",
        "id": 409,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 346,
        "src": "54:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 410,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 296,
              "src": "109:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$296",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 411,
            "nodeType": "InheritanceSpecifier",
            "src": "109:9:4"
          }
        ],
        "contractDependencies": [
          296,
          484,
          1867
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 461,
        "linearizedBaseContracts": [
          461,
          296,
          1867,
          484
        ],
        "name": "MyTokenSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 413,
            "mutability": "mutable",
            "name": "kycContract",
            "nodeType": "VariableDeclaration",
            "scope": 461,
            "src": "214:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_KYCContract_$345",
              "typeString": "contract KYCContract"
            },
            "typeName": {
              "id": 412,
              "name": "KYCContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 345,
              "src": "214:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KYCContract_$345",
                "typeString": "contract KYCContract"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "359:130:4",
              "statements": [
                {
                  "expression": {
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 429,
                      "name": "kycContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "463:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KYCContract_$345",
                        "typeString": "contract KYCContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 430,
                      "name": "_kyc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "477:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KYCContract_$345",
                        "typeString": "contract KYCContract"
                      }
                    },
                    "src": "463:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KYCContract_$345",
                      "typeString": "contract KYCContract"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "463:18:4"
                }
              ]
            },
            "id": 434,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 424,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "338:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 425,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 417,
                    "src": "344:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "id": 426,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 419,
                    "src": "352:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1370",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 427,
                "modifierName": {
                  "id": 423,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 296,
                  "src": "328:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$296_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "328:30:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "258:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "272:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "296:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1370",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1370,
                    "src": "296:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1370",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "_kyc",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "310:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_KYCContract_$345",
                    "typeString": "contract KYCContract"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "KYCContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 345,
                    "src": "310:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KYCContract_$345",
                      "typeString": "contract KYCContract"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "257:70:4"
            },
            "returnParameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:4"
            },
            "scope": 461,
            "src": "246:243:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              221
            ],
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "1186:323:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 446,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1224:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 447,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "1237:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 443,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1197:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_MyTokenSale_$461",
                          "typeString": "contract super MyTokenSale"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 221,
                      "src": "1197:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1197:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 453,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1291:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1291:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 451,
                            "name": "kycContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "1266:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KYCContract_$345",
                              "typeString": "contract KYCContract"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "kycCompleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 344,
                          "src": "1266:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1266:36:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207573657220686173206e6f7420636f6d706c6574656420746865207265717569726564206b6e6f7720796f757220637573746f6d657220636865636b73",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1304:68:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31d51dfb1792461e279f90e76e19b19aaae7b99a9438c260954090c4bd04a71c",
                          "typeString": "literal_string \"This user has not completed the required know your customer checks\""
                        },
                        "value": "This user has not completed the required know your customer checks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31d51dfb1792461e279f90e76e19b19aaae7b99a9438c260954090c4bd04a71c",
                          "typeString": "literal_string \"This user has not completed the required know your customer checks\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1258:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:115:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:115:4"
                }
              ]
            },
            "documentation": {
              "id": 435,
              "nodeType": "StructuredDocumentation",
              "src": "549:539:4",
              "text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
            },
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 441,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1178:8:4"
            },
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1124:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "1145:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:40:4"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:4"
            },
            "scope": 461,
            "src": "1094:415:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 462,
        "src": "85:1427:4"
      }
    ],
    "src": "0:1512:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/MyTokenSale.sol",
      "exportedSymbols": {
        "Address": [
          1827
        ],
        "Context": [
          484
        ],
        "Crowdsale": [
          296
        ],
        "IERC20": [
          1370
        ],
        "KYCContract": [
          345
        ],
        "MyTokenSale": [
          461
        ],
        "Ownable": [
          593
        ],
        "ReentrancyGuard": [
          1867
        ],
        "SafeERC20": [
          1583
        ],
        "SafeMath": [
          789
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 407,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "SourceUnit": 297,
          "absolutePath": "/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/CrowdSale.sol",
          "file": "./CrowdSale.sol",
          "scope": 462,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 408,
        "name": "ImportDirective",
        "src": "27:25:4"
      },
      {
        "attributes": {
          "SourceUnit": 346,
          "absolutePath": "/C/Users/schee/Documents/University/4/FYP/eth course/Asset tokenisation with Eth/contracts/KYCContract.sol",
          "file": "./KYCContract.sol",
          "scope": 462,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 409,
        "name": "ImportDirective",
        "src": "54:27:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            296,
            484,
            1867
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            461,
            296,
            1867,
            484
          ],
          "name": "MyTokenSale",
          "scope": 462
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Crowdsale",
                  "referencedDeclaration": 296,
                  "type": "contract Crowdsale"
                },
                "id": 410,
                "name": "UserDefinedTypeName",
                "src": "109:9:4"
              }
            ],
            "id": 411,
            "name": "InheritanceSpecifier",
            "src": "109:9:4"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "kycContract",
              "scope": 461,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract KYCContract",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "KYCContract",
                  "referencedDeclaration": 345,
                  "type": "contract KYCContract"
                },
                "id": 412,
                "name": "UserDefinedTypeName",
                "src": "214:11:4"
              }
            ],
            "id": 413,
            "name": "VariableDeclaration",
            "src": "214:23:4"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 461,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "rate",
                      "scope": 434,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 414,
                        "name": "ElementaryTypeName",
                        "src": "258:7:4"
                      }
                    ],
                    "id": 415,
                    "name": "VariableDeclaration",
                    "src": "258:12:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "wallet",
                      "scope": 434,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 416,
                        "name": "ElementaryTypeName",
                        "src": "272:15:4"
                      }
                    ],
                    "id": 417,
                    "name": "VariableDeclaration",
                    "src": "272:22:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "token",
                      "scope": 434,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IERC20",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IERC20",
                          "referencedDeclaration": 1370,
                          "type": "contract IERC20"
                        },
                        "id": 418,
                        "name": "UserDefinedTypeName",
                        "src": "296:6:4"
                      }
                    ],
                    "id": 419,
                    "name": "VariableDeclaration",
                    "src": "296:12:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_kyc",
                      "scope": 434,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract KYCContract",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "KYCContract",
                          "referencedDeclaration": 345,
                          "type": "contract KYCContract"
                        },
                        "id": 420,
                        "name": "UserDefinedTypeName",
                        "src": "310:11:4"
                      }
                    ],
                    "id": 421,
                    "name": "VariableDeclaration",
                    "src": "310:16:4"
                  }
                ],
                "id": 422,
                "name": "ParameterList",
                "src": "257:70:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 428,
                "name": "ParameterList",
                "src": "359:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 296,
                      "type": "type(contract Crowdsale)",
                      "value": "Crowdsale"
                    },
                    "id": 423,
                    "name": "Identifier",
                    "src": "328:9:4"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 415,
                      "type": "uint256",
                      "value": "rate"
                    },
                    "id": 424,
                    "name": "Identifier",
                    "src": "338:4:4"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 417,
                      "type": "address payable",
                      "value": "wallet"
                    },
                    "id": 425,
                    "name": "Identifier",
                    "src": "344:6:4"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 419,
                      "type": "contract IERC20",
                      "value": "token"
                    },
                    "id": 426,
                    "name": "Identifier",
                    "src": "352:5:4"
                  }
                ],
                "id": 427,
                "name": "ModifierInvocation",
                "src": "328:30:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract KYCContract"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 413,
                              "type": "contract KYCContract",
                              "value": "kycContract"
                            },
                            "id": 429,
                            "name": "Identifier",
                            "src": "463:11:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 421,
                              "type": "contract KYCContract",
                              "value": "_kyc"
                            },
                            "id": 430,
                            "name": "Identifier",
                            "src": "477:4:4"
                          }
                        ],
                        "id": 431,
                        "name": "Assignment",
                        "src": "463:18:4"
                      }
                    ],
                    "id": 432,
                    "name": "ExpressionStatement",
                    "src": "463:18:4"
                  }
                ],
                "id": 433,
                "name": "Block",
                "src": "359:130:4"
              }
            ],
            "id": 434,
            "name": "FunctionDefinition",
            "src": "246:243:4"
          },
          {
            "attributes": {
              "baseFunctions": [
                221
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_preValidatePurchase",
              "scope": 461,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
                },
                "id": 435,
                "name": "StructuredDocumentation",
                "src": "549:539:4"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 441,
                "name": "OverrideSpecifier",
                "src": "1178:8:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "beneficiary",
                      "scope": 460,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 436,
                        "name": "ElementaryTypeName",
                        "src": "1124:7:4"
                      }
                    ],
                    "id": 437,
                    "name": "VariableDeclaration",
                    "src": "1124:19:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "weiAmount",
                      "scope": 460,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 438,
                        "name": "ElementaryTypeName",
                        "src": "1145:7:4"
                      }
                    ],
                    "id": 439,
                    "name": "VariableDeclaration",
                    "src": "1145:17:4"
                  }
                ],
                "id": 440,
                "name": "ParameterList",
                "src": "1123:40:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 442,
                "name": "ParameterList",
                "src": "1186:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_preValidatePurchase",
                              "referencedDeclaration": 221,
                              "type": "function (address,uint256) view"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967271,
                                  "type": "contract super MyTokenSale",
                                  "value": "super"
                                },
                                "id": 443,
                                "name": "Identifier",
                                "src": "1197:5:4"
                              }
                            ],
                            "id": 445,
                            "name": "MemberAccess",
                            "src": "1197:26:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 437,
                              "type": "address",
                              "value": "beneficiary"
                            },
                            "id": 446,
                            "name": "Identifier",
                            "src": "1224:11:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 439,
                              "type": "uint256",
                              "value": "weiAmount"
                            },
                            "id": 447,
                            "name": "Identifier",
                            "src": "1237:9:4"
                          }
                        ],
                        "id": 448,
                        "name": "FunctionCall",
                        "src": "1197:50:4"
                      }
                    ],
                    "id": 449,
                    "name": "ExpressionStatement",
                    "src": "1197:50:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31d51dfb1792461e279f90e76e19b19aaae7b99a9438c260954090c4bd04a71c",
                                  "typeString": "literal_string \"This user has not completed the required know your customer checks\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 450,
                            "name": "Identifier",
                            "src": "1258:7:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "kycCompleted",
                                  "referencedDeclaration": 344,
                                  "type": "function (address) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 413,
                                      "type": "contract KYCContract",
                                      "value": "kycContract"
                                    },
                                    "id": 451,
                                    "name": "Identifier",
                                    "src": "1266:11:4"
                                  }
                                ],
                                "id": 452,
                                "name": "MemberAccess",
                                "src": "1266:24:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 453,
                                    "name": "Identifier",
                                    "src": "1291:3:4"
                                  }
                                ],
                                "id": 454,
                                "name": "MemberAccess",
                                "src": "1291:10:4"
                              }
                            ],
                            "id": 455,
                            "name": "FunctionCall",
                            "src": "1266:36:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "54686973207573657220686173206e6f7420636f6d706c6574656420746865207265717569726564206b6e6f7720796f757220637573746f6d657220636865636b73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This user has not completed the required know your customer checks\"",
                              "value": "This user has not completed the required know your customer checks"
                            },
                            "id": 456,
                            "name": "Literal",
                            "src": "1304:68:4"
                          }
                        ],
                        "id": 457,
                        "name": "FunctionCall",
                        "src": "1258:115:4"
                      }
                    ],
                    "id": 458,
                    "name": "ExpressionStatement",
                    "src": "1258:115:4"
                  }
                ],
                "id": 459,
                "name": "Block",
                "src": "1186:323:4"
              }
            ],
            "id": 460,
            "name": "FunctionDefinition",
            "src": "1094:415:4"
          }
        ],
        "id": 461,
        "name": "ContractDefinition",
        "src": "85:1427:4"
      }
    ],
    "id": 462,
    "name": "SourceUnit",
    "src": "0:1512:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "purchaser",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokensPurchased",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB27299de6014A1b945C7042CC014B115770ea6c1",
      "transactionHash": "0x4b30a0e64a6f04eb7271e42a3faded1f74ccdf0596a9084f349d8d316803597b"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-18T20:36:44.231Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "rate()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "wallet()": {
        "returns": {
          "_0": "the address where funds are collected."
        }
      },
      "weiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokensPurchased(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}